class ServiciosArticulos
!!!131935.java!!!	agregar(inout o : Object) : boolean

    
    if (articulos.indexOf((Articulo) o)==-1) {
      articulos.add((Articulo) o);
      return true;
    }
    else {
      return false;
    }    
!!!132063.java!!!	borrar(inout unArticulo : Articulo) : boolean

    if (articulos.indexOf(unArticulo)!=-1) {
      ArrayList presupuestos = null;
      presupuestos = ServiciosPresupuestos.obtenerPresupuestoPorArticulo(unArticulo);
      if (presupuestos.size() > 0) {
        return false;
      }
      else {
        articulos.remove(unArticulo);
        return true;        
      }     
    }
    else {
      return false;
    }      
!!!132191.java!!!	listado() : ArrayList

    if (cantidad() == 0)
      return null;
    else
      return articulos;
!!!132319.java!!!	modificar(inout original : Articulo, in nombre : String, inout medida : Medida, in cantidad : int, in costo : double) : boolean

    if (( original == null))  return false;
    int posOriginal = articulos.indexOf( original);
    if (posOriginal == -1) return false;
   
    
    // Medida : No se puede modificar si el articulo esta involucrado en algun presupuesto
    ArrayList presupuestos = null;
    presupuestos = ServiciosPresupuestos.obtenerPresupuestoPorArticulo(original);
    if (presupuestos.size() > 0 && !original.getMedida().equals(medida)) {
          return false;
    }
    original.setCantidad(cantidad);
    original.setCosto(costo);
    original.setMedida(medida);
    original.setNombre(nombre);
    return true;
!!!132447.java!!!	cantidad() : int

    return articulos.size();
!!!132575.java!!!	obtener(inout o : Object) : Object

    // TODO Auto-generated method stub
    int pos = articulos.indexOf((Articulo) o);
    if (pos!=-1) { 
      return articulos.get(pos);
    }
    else {
      return null;
    }  
!!!132703.java!!!	obtenerArticulosNotIn(inout unPresupuesto : Presupuesto) : ArrayList

	ArrayList losArticulos=new ArrayList();
	boolean existe;
	try {
		for (int i = 0; i < articulos.size(); i++) {
				existe=false;
				Articulo a= (Articulo) articulos.get(i);
			    ArrayList items=new ArrayList();
			    items=unPresupuesto.getItems();
			    if (items.isEmpty()){
			    	losArticulos.add(a);
			    }
			    else{
			    	for(int j = 0; j < items.size(); j++) {
			    		Item itemPresupuesto=(Item)items.get(j);
			    		if ((itemPresupuesto.getElArticulo().equals(a))){
			    			existe=true;
			    		}
			    	}
			    	if (existe==false){
				    	losArticulos.add(a);	
				    }
			    }
			    
			     
		}
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	Collections.sort(losArticulos);
		return losArticulos;
